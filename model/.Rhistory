names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(filter(fear), aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
geom_point(position="jitter") +
facet_wrap(~Threshold)
fear <- read_csv("fear6.csv")
fear$Threshold <- as.factor(fear$Threshold)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(filter(fear), aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Threshold)
fear <- read_csv("fear6.csv")
fear$Threshold <- as.factor(fear$Threshold)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(filter(fear), aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fear6.csv")
fear$Threshold <- as.factor(fear$Threshold)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fear6.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fg.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear
fear <- read_csv("fg.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear
fear <- read_csv("fg.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fg.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear
fear <- read_csv("fg.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$BLC <- as.factor(fear$BLC)
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~BLC)
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise)
fear$Threshold
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Threshold)
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=BLC)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Threshold)
fear$BLC
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=BLC)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Threshold)
fear <- read_csv("fg2.csv")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise)
fear
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise)
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
#stat_summary(fun.data=mean_sdl, geom="point") +
geom_point(position="jitter") +
facet_wrap(~Noise)
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
#stat_summary(fun.data=mean_sdl, geom="point") +
geom_point(position="jitter") +
facet_wrap(~Noise)
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
#stat_summary(fun.data=mean_sdl, geom="point") +
geom_point(position="jitter") +
facet_wrap(~Intensity)
fear <- read_csv("fg3.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
#stat_summary(fun.data=mean_sdl, geom="point") +
geom_point(position="jitter") +
facet_wrap(~Intensity)
fear
unique(fear$Intensity)
unique(fear$Threshold)
fear <- read_csv("fg3.csv")
names(fear) <- c("Noise", "Mistake", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
#stat_summary(fun.data=mean_sdl, geom="point") +
geom_point(position="jitter") +
facet_wrap(~Intensity)
fear <- read_csv("fg3.csv")
names(fear) <- c("Noise", "Mistake", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Intensity)
fear <- read_csv("fg3.csv")
names(fear) <- c("Noise", "Mistake", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise)
fear <- read_csv("fg1.csv")
names(fear) <- c("Noise", "Mistake", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise)
fear
fear <- read_csv("fg1.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise)
fear <- read_csv("fg1.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise*Intensity)
fear <- read_csv("fg1.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise*Intensity)
fear <- read_csv("fg1.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise*Intensity) +
theme_pander()
#geom_point(position="jitter") +
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(ggthemes)
library(ggsci)
library(kableExtra)
library(xtable)
library(matlab)
library(R.matlab)
library(MCMCpack)
library(ggrepel)
library(patchwork)
logLp <- ggplot(comparisons, aes(x=Model,
y = RelativeLikelihood,
fill=Model,
col=Model)) +
geom_col(
width = .9, alpha = .5) +
scale_color_manual(values = model_colors) +
scale_fill_manual(values = model_colors) +
ggtitle("Architecture Comparison, Log-Likelihood") +
xlab("Architecture") +
ylab("Relative Log-Likelihood") +
#coord_flip() +
geom_text(aes(label=round(RelativeLikelihood,1),
y = RelativeLikelihood + 150),
col="black",
#            position = position_stack(vjust=c(1)),
direction="both",
size=3) +
theme_pander() +
theme(axis.text.x = element_text(angle=45, hjust = c(1)),
legend.position = "NA")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(ggthemes)
library(ggsci)
library(kableExtra)
library(xtable)
library(matlab)
library(R.matlab)
library(MCMCpack)
library(ggrepel)
library(patchwork)
model.names <- c("Common Model",
"Hierarchical 1",
"Hierarchical 2",
"Hierarchical 3",
"Hub-and-spoke PFC",
"Hub-and-spoke BG",
"Hub-and-spoke Temporal"
)
model_colors <- c("red3",
"palegreen4", "palegreen3", "palegreen2",
#"goldenrod4", "goldenrod3", "goldenrod2",
"deepskyblue4", "deepskyblue3", "deepskyblue2")
load.data <- function(file,
models=model.names,
task="Resting State") {
res <- NULL
bms <- readMat(file)
data <- bms$BMS
# Likelihood
like <- data[[1]][[1]][[4]]
# RFX analysis
alpha <- data[[1]][[1]][[5]][,,1]$alpha
expect <- data[[1]][[1]][[5]][,,1]$exp.r
exceed <- data[[1]][[1]][[5]][,,1]$xp
pexceed <- data[[1]][[1]][[5]][,,1]$pxp
partial <- data.frame(Model = models, Alpha = c(alpha),
Likelihood = c(like), Expected = c(expect),
Exceedance = c(exceed), PExceedance = c(pexceed),
Task = task)
if (is.null(res)) {
res <- partial
} else {
res <- merge(res, partial, all=T)
}
res
}
generate.exp <- function(alphas,
mnames = paste("M", 1:length(alphas), sep=""),
res = 0.001) {
p <- seq(0, 1, res)
ii <- 1:length(alphas)
dd <- NULL
for (i in ii) {
alpha <- alphas[i]
others <- sum(alphas[ii != i])  # Dirichlet dist is agglomerative
#print(c(alpha, others))   # Debug
# Create the appropriate instantiation of the Dirichlet
# Functions with two alpha values (each model vs. the rest)
f <- function(x) {ddirichlet(c(x,  1 -x), alpha=c(alpha, others))}
vf <- Vectorize(f)
d <- vf(p)
d[is.na(d)] <- 0
dd <-cbind(dd, d)
#print(dim(dd))
}
colnames(dd) <- mnames
# Return
dd
}
comparisons <- load.data("comparisons/BMS.mat")
minL <- min(comparisons$Likelihood)
comparisons <- comparisons %>%
mutate(RelativeLikelihood = Likelihood - minL)
comparisons %>%
kable() %>%
kable_styling(bootstrap_options = c("hover", "striped"))
alphas <- comparisons$Alpha
dists <- as.data.frame(generate.exp(alphas)/1000)
names(dists) <- model.names
wdists <- as_tibble(dists) %>%
add_column(Task = "Resting State",
Probability = seq(0, 1, 1/1000))
ldists <- wdists %>%
pivot_longer(cols = model.names,
names_to = "Model",
values_to = "Density")
ldists$Density[ldists$Density == Inf] <- 0
ldist_summary <- ldists %>%
group_by(Model) %>%
#  mutate(dXdY = Probability * Density * 1000) %>%
summarise(#Expected = mean(dXdY),
MaxDensity = max(Density))
comparisons <- inner_join(comparisons, ldist_summary, keep=F)
densityp <- ggplot(ldists, aes(x=Probability,
y = Density,
fill=Model,
col=Model)) +
geom_polygon(alpha=.5) +
scale_color_manual(values = model_colors) +
scale_fill_manual(values = model_colors) +
geom_text_repel(data=comparisons, aes(x=Expected,
y=MaxDensity,
label=percent(Exceedance, accuracy = 0.1)),
col="black") +
ggtitle("Resting State") +
theme_pander()
densityp
ggplot(comparisons, aes(x="", y = Exceedance, fill=Model, col=Model)) +
geom_bar(stat = "identity", col="grey", width=1, alpha=.8) +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent_format(accuracy = 2L)) +
scale_color_manual(values = model_colors) +
scale_fill_manual(values = model_colors) +
ggtitle("Resting State") +
xlab("Exceedance Probabilities") +
ylab("Resting State") +
geom_text_repel(aes(label=percent(Exceedance, .1)),
col="white",
position=position_stack(vjust=0.5),
direction="both",
size=3) +
theme_pander() +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
exceedancep <-
ggplot(comparisons, aes(x=Task, y = Exceedance, fill=Model, col=Model)) +
geom_bar(stat = "identity",
width = .5, alpha = .5) +
scale_y_continuous(labels = scales::percent_format(accuracy = 5L)) +
scale_color_manual(values = model_colors) +
scale_fill_manual(values = model_colors) +
ggtitle("Resting-State fMRI") +
xlab("Task") +
ylab("Exceedance Probabiliy") +
coord_flip() +
geom_text_repel(aes(label=percent(Exceedance, .1)),
col="black",
position=position_stack(vjust=0.5),
direction="both",
size=3) +
theme_pander() +
theme(legend.position = "bottom")
exceedancep
densityp + ggtitle("Architecture Comparison, Random Effects")  +
theme(legend.position = "bottom") +
guides(fill=guide_legend(ncol=2),
col=guide_legend(ncol=2))
ggsave("figure8.png", dpi=300)
logLp <- ggplot(comparisons, aes(x=Model,
y = RelativeLikelihood,
fill=Model,
col=Model)) +
geom_col(
width = .9, alpha = .5) +
scale_color_manual(values = model_colors) +
scale_fill_manual(values = model_colors) +
ggtitle("Architecture Comparison, Log-Likelihood") +
xlab("Architecture") +
ylab("Relative Log-Likelihood") +
#coord_flip() +
geom_text(aes(label=round(RelativeLikelihood,1),
y = RelativeLikelihood + 150),
col="black",
#            position = position_stack(vjust=c(1)),
direction="both",
size=3) +
theme_pander() +
theme(axis.text.x = element_text(angle=45, hjust = c(1)),
legend.position = "NA")
logLp
ggsave("figure7.png")
densityp + ggtitle("Architecture Comparison, Random Effects")  +
theme(legend.position = "bottom") +
labs(fill="Architecture") +
guides(fill=guide_legend(ncol=2),
col=guide_legend(ncol=2))
ggsave("figure8.png", dpi=300)
densityp + ggtitle("Architecture Comparison, Random Effects")  +
theme(legend.position = "bottom") +
labs(fill="Architecture", col="Architecture") +
guides(fill=guide_legend(ncol=2),
col=guide_legend(ncol=2))
ggsave("figure8.png", dpi=300)
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise*Intensity) +
theme_pander()
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise*BLC) +
theme_pander()
fear <- read_csv("fg2.csv")
names(fear) <- c("Noise", "Intensity", "Threshold", "BLC", "Stimulus", "Percentage")
fear$Threshold <- as.factor(fear$Threshold)
fear$Noise <- as.factor(fear$Noise)
fear$Intensity <- as.factor(fear$Intensity)
ggplot(fear, aes(x=Stimulus, y=Percentage, col=Threshold)) +
stat_summary(fun.data=mean_sdl, geom="point") +
#geom_point(position="jitter") +
facet_wrap(~Noise*Intensity) +
theme_pander()
